{"version":3,"sources":["types/Statuses.ts","components/TodoComponent/TodoComponent.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Statuses","TodoComponent","todo","setSelectedTodo","selectedTodo","className","id","completed","classNames","title","type","onClick","TodoList","todos","map","TodoFilter","searchedQuery","setSearchedQuery","selectedStatusOfTodo","setSelectedStatusOfTodo","value","onChange","event","Number","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","resetSelectedTodo","useState","selectedUser","setSelectedUser","fetchData","a","userId","newUser","useEffect","href","email","name","App","setTodos","todosFromServer","visibleTodos","filteredTodos","JSON","parse","stringify","isCompleted","filter","toLowerCase","includes","searchAndSort","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0b66b6f.chunk.js","sourcesContent":["export enum Statuses {\n  All,\n  Active,\n  Completed,\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoComponent: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <>\n      <tr data-cy=\"todo\" key={todo.id}>\n        <td className=\"is-vcentered\">{todo.id}</td>\n        <td className=\"is-vcentered\">\n          {todo.completed && (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          )}\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className={classNames(\n            { 'has-text-success': todo.completed },\n            { 'has-text-danger': !todo.completed },\n          )}\n          >\n            {todo.title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => {\n              setSelectedTodo(todo);\n            }}\n          >\n            <span className=\"icon\">\n              <i className={classNames(\n                { 'fa fa-eye-slash': selectedTodo?.id === todo.id },\n                { 'fa fa-eye': selectedTodo?.id !== todo.id },\n              )}\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoComponent } from '../TodoComponent';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedTodo: (todo: Todo | null) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoComponent\n            todo={todo}\n            setSelectedTodo={setSelectedTodo}\n            selectedTodo={selectedTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\nimport { Statuses } from '../../types/Statuses';\n\ninterface Props {\n  searchedQuery: string;\n  setSearchedQuery: (value: string) => void;\n  selectedStatusOfTodo: Statuses;\n  setSelectedStatusOfTodo: (value: Statuses) => void;\n}\n\nexport const TodoFilter: FC<Props> = ({\n  searchedQuery,\n  setSearchedQuery,\n  selectedStatusOfTodo,\n  setSelectedStatusOfTodo,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatusOfTodo}\n            onChange={(event) => {\n              setSelectedStatusOfTodo(Number(event.target.value));\n            }}\n          >\n            <option value={Statuses.All}>All</option>\n            <option value={Statuses.Active}>Active</option>\n            <option value={Statuses.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchedQuery}\n          onChange={(event) => setSearchedQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchedQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchedQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const geTodo = (todoId: number) => get<Todo>(`todos/${todoId}`);\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo;\n  resetSelectedTodo: (value: null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  resetSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const fetchData = async () => {\n    const newUser = await getUser(selectedTodo.userId);\n\n    setSelectedUser(newUser);\n  };\n\n  useEffect(() => {\n    fetchData();\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => resetSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Statuses } from './types/Statuses';\n\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchedQuery, setSearchedQuery] = useState('');\n  const [selectedStatusOfTodo, setSelectedStatusOfTodo] = useState<Statuses>(Statuses.All);\n\n  const fetchData = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function searchAndSort() {\n    let filteredTodos: Todo[] = JSON.parse(JSON.stringify(todos));\n\n    const isCompleted = selectedStatusOfTodo === Statuses.Completed;\n\n    if (selectedStatusOfTodo === Statuses.Active || selectedStatusOfTodo === Statuses.Completed) {\n      filteredTodos = filteredTodos\n        .filter(todo => todo.completed === isCompleted);\n    }\n\n    if (searchedQuery) {\n      filteredTodos = filteredTodos\n        .filter(todo => {\n          return todo.title.toLowerCase().includes(searchedQuery.toLowerCase());\n        });\n    }\n\n    return filteredTodos;\n  }\n\n  const visibleTodos: Todo[] = searchAndSort();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchedQuery={searchedQuery}\n                setSearchedQuery={setSearchedQuery}\n                selectedStatusOfTodo={selectedStatusOfTodo}\n                setSelectedStatusOfTodo={setSelectedStatusOfTodo}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                visibleTodos.length\n                  ? (\n                    <TodoList\n                      todos={visibleTodos}\n                      setSelectedTodo={setSelectedTodo}\n                      selectedTodo={selectedTodo}\n                    />\n                  )\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          resetSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}