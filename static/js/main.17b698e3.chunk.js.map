{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","searchedTodo","setSearchedTodo","selectedStatusOfTodo","setSelectedStatusOfTodo","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getLookingForTodos","searchedPhrase","status","filteredTodos","JSON","parse","stringify","isCompleted","filter","toLowerCase","includes","searchAndSort","TodoModal","resetSelectedTodo","useState","selectedUser","setSelectedUser","fetchData","a","userId","newUser","useEffect","href","email","name","App","setTodos","todosFromServer","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17b698e3.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedTodo: (todo: Todo | null) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={selectedTodo?.id === todo.id\n                      ? 'fa fa-eye-slash'\n                      : 'fa fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  searchedTodo: string;\n  setSearchedTodo: (value: string) => void;\n  selectedStatusOfTodo: string;\n  setSelectedStatusOfTodo: (value: string) => void;\n}\n\nexport const TodoFilter: FC<Props> = ({\n  searchedTodo,\n  setSearchedTodo,\n  selectedStatusOfTodo,\n  setSelectedStatusOfTodo,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatusOfTodo}\n            onChange={(event) => setSelectedStatusOfTodo(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchedTodo}\n          onChange={(event) => setSearchedTodo(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchedTodo !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchedTodo('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nfunction searchAndSort(todos: Todo[], searchedPhrase: string, status: string) {\n  let filteredTodos: Todo[] = JSON.parse(JSON.stringify(todos));\n\n  const isCompleted = status === 'completed';\n\n  if (status === 'active' || status === 'completed') {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.completed === isCompleted);\n  }\n\n  return filteredTodos\n    .filter(todo => {\n      return todo.title.toLowerCase().includes(searchedPhrase.toLowerCase());\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const geTodo = (todoId: number) => get<Todo>(`todos/${todoId}`);\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n\nexport const getLookingForTodos = (searchedPhrase: string, status: string) => {\n  return get<Todo[]>('/todos')\n    .then(todos => searchAndSort(todos, searchedPhrase, status));\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo;\n  resetSelectedTodo: (value: null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  resetSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  const fetchData = async () => {\n    const newUser = await getUser(selectedTodo.userId);\n\n    setSelectedUser(newUser);\n  };\n\n  useEffect(() => {\n    fetchData();\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => resetSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getLookingForTodos } from './api';\n\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchedTodo, setSearchedTodo] = useState('');\n  const [selectedStatusOfTodo, setSelectedStatusOfTodo] = useState('all');\n\n  const fetchData = async () => {\n    const todosFromServer = await getLookingForTodos(searchedTodo, selectedStatusOfTodo);\n\n    setTodos(todosFromServer);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [searchedTodo, selectedStatusOfTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchedTodo={searchedTodo}\n                setSearchedTodo={setSearchedTodo}\n                selectedStatusOfTodo={selectedStatusOfTodo}\n                setSelectedStatusOfTodo={setSelectedStatusOfTodo}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length > 0\n                  ? (\n                    <TodoList\n                      todos={todos}\n                      setSelectedTodo={setSelectedTodo}\n                      selectedTodo={selectedTodo}\n                    />\n                  )\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} resetSelectedTodo={setSelectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}